import http from 'http'
import app from '../index'

const logger = require('../util/log')('app')

const port = normalizePort(process.env.PORT || '3000')

app.on('error', onError)
app.on('listening', onListening)

app.listen(port, () => {console.log('Koa start at 3000...')})

try {
  require('fs').mkdirSync('./logs')
} catch(e) {
  if (e.code != 'EEXIST') {
    console.error("Could not set up log directory, error was: ", e)
    process.exit(1)
  }
}

function normalizePort(val) {
  var port = parseInt(val, 10)

  if (isNaN(port)) {
    // named pipe
    return val
  }

  if (port >= 0) {
    // port number
    return port
  }

  return false
}

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error
  }

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      logger.error(bind + ' requires elevated privileges')
      process.exit(1)
      break
    case 'EADDRINUSE':
      logger.error(bind + ' is already in use')
      process.exit(1)
      break
    default:
      throw error
  }
}

function onListening() {
  var addr = server.address()
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port
  logger.info('Listening on ' + bind)
}
